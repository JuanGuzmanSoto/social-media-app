{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\J\\\\Documents\\\\social-media-app\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Square(props) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: \"square\",\n    onClick: props.onClick,\n    children: props.value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 9\n  }, this);\n}\n_c = Square;\nclass Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      squares: Array(9).fill(null),\n      xIsNext: true\n    };\n  }\n  handleClick(i) {\n    const squares = this.state.squares.slice();\n    if (calculateWinner(squares) || squares[i]) {\n      //if all squares are filled or there is a winner, stop changing game states. \n      return;\n    }\n    squares[i] = this.state.xIsNext ? 'X' : 'O';\n    this.setState({\n      squares: squares,\n      xIsNext: !this.state.xIsNext\n    });\n  }\n  renderSquare(i) {\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: this.state.squares[i],\n      onClick: () => this.handleClick(i)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this);\n  }\n  render() {\n    const winner = calculateWinner(this.state.squares);\n    let status;\n    if (winner) {\n      status = 'Winner: ' + winner;\n    } else {\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\n    }\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"status\",\n        children: status\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(0), this.renderSquare(1), this.renderSquare(2)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(3), this.renderSquare(4), this.renderSquare(5)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"board-row\",\n        children: [this.renderSquare(6), this.renderSquare(7), this.renderSquare(8)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this);\n  }\n}\nclass Game extends React.Component {\n  //component\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-board\",\n        children: /*#__PURE__*/_jsxDEV(Board, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ol\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this);\n  }\n}\nfunction calculateWinner(squares) {\n  //All possibilities for a winner to happen.\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\n// ========================================\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render( /*#__PURE__*/_jsxDEV(Game, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 111,\n  columnNumber: 13\n}, this));\nvar _c;\n$RefreshReg$(_c, \"Square\");","map":{"version":3,"names":["React","ReactDOM","jsxDEV","_jsxDEV","Square","props","className","onClick","children","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","Component","constructor","state","squares","Array","fill","xIsNext","handleClick","i","slice","calculateWinner","setState","renderSquare","render","winner","status","Game","lines","length","a","b","c","root","createRoot","document","getElementById","$RefreshReg$"],"sources":["C:/Users/J/Documents/social-media-app/src/index.js"],"sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nfunction Square(props){\r\n    return (\r\n        <button className = \"square\" onClick={props.onClick}>\r\n            {props.value}\r\n        </button>\r\n    );\r\n}\r\n\r\nclass Board extends React.Component { \r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            squares: Array(9).fill(null),\r\n            xIsNext:true,\r\n        };\r\n    }\r\n    handleClick(i){\r\n        const squares = this.state.squares.slice();\r\n        if(calculateWinner(squares) ||squares[i]){ //if all squares are filled or there is a winner, stop changing game states. \r\n            return;\r\n        }\r\n        squares[i] = this.state.xIsNext ? 'X' : 'O';\r\n        this.setState({\r\n            squares:squares,\r\n            xIsNext: !this.state.xIsNext,\r\n        });\r\n    }\r\n  renderSquare(i) {\r\n    return (\r\n        <Square\r\n        value={this.state.squares[i]}\r\n        onClick={() => this.handleClick(i)}\r\n        />\r\n    );\r\n  }\r\n\r\n  render() {\r\n    const winner = calculateWinner(this.state.squares);\r\n    let status;\r\n    if(winner){\r\n        status = 'Winner: ' + winner;\r\n    }else{\r\n        status = 'Next player: ' +(this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        <div className=\"status\">{status}</div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n        \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component { //component\r\n  render() {\r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board />\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{/* status */}</div>\r\n          <ol>{/* TODO */}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nfunction calculateWinner(squares) { //All possibilities for a winner to happen.\r\n    const lines = [\r\n      [0, 1, 2],\r\n      [3, 4, 5],\r\n      [6, 7, 8],\r\n      [0, 3, 6],\r\n      [1, 4, 7],\r\n      [2, 5, 8],\r\n      [0, 4, 8],\r\n      [2, 4, 6],\r\n    ];\r\n    for (let i = 0; i < lines.length; i++) {\r\n      const [a, b, c] = lines[i];\r\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n        return squares[a];\r\n      }\r\n    }\r\n    return null;\r\n  }\r\n\r\n// ========================================\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(<Game />);\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}